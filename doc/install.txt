##############################################################################
# RackMonkey - Know Your Racks - http://www.rackmonkey.org                   #
# Version 1.2.%BUILD%                                                        #
# (C)2007 Will Green (wgreen at users.sourceforge.net)                       #
# RackMonkey Install Guide                                                   #
##############################################################################

Contents
========
     1. Introduction
     2. Obtaining RackMonkey
     3. Requirements
     4. Installing RackMonkey
     5. Configuring RackMonkey
     6. Database Set Up
     7. Running RackMonkey
     8. Upgrading RackMonkey
     9. Troubleshooting
    10. Logging Support Requests
    11. Bugs and Feature Requests
    

1. Introduction
===============
This document explains how to install RackMonkey. Please consult the README
before performing an install as it contains important information on this
release (including known issues). See the doc/changes.txt document for what's
new in this release. For information on using RackMonkey see
doc/userguide.txt.


2. Obtaining RackMonkey
=======================

Release Version
---------------
Visit http://www.rackmonkey.org to download a release version. Release
versions are recommended for production use or anyone interested in RackMonkey
as a user. Releases are packaged as bzipped tars (.tar.bz2) or gzipped tars
(.tar.gz) and can be extracted with (your filename may be different):

    bunzip2 -c rackmonkey_1.2.3.tar.bz2 | tar xvf -

	or
	
	gunzip -c rackmonkey_1.2.3.tar.gz | tar xvf -

Subversion Repository
---------------------
If you're a developer you can check a release out of subversion. 

The RackMonkey svn server:  https://rackmonkey.svn.sourceforge.net
Path to RackMonkey trunk:   /svnroot/rackmonkey/rackmonkey/trunk

For more information on the RackMonkey subversion repository see the
'Source Code' section of:

    http://www.rackmonkey.org/faq


3. Requirements
===============
RackMonkey has minimal system requirements, and most unix-based operating 
system already have all or nearly all the required software. It has been 
tested on the following operating systems:

* FreeBSD 5.3 (i386)
* Mac OS X 10.4 (ppc)
* RHEL 4 (i386)
* Solaris 9 (sparc)
* Solaris 10 (x86-64)

Needed to install RackMonkey
----------------------------
* Web server (e.g. Apache - but note it has only limited testing under mod_perl)

* One of the following databases (see README for more):
  - SQLite v3.2.2 or higher
      SQLite3 can be obtained from http://www.sqlite.org
  - PostgreSQL v8 or higher
      Postgres can be obtained from http://www.postgresql.org
  NB. SQLite is much simpler to set up if you're not familiar with databases.
    
* Perl 5.61 or higher (5.84 or higher recommended) with the following modules:
  - DBI
  - CGI
  - HTML::Template  
  - DBI driver for your choice of database, either:
    - DBD::SQLite v1.09+ - for SQLite
    - DBD::Pg - for Postgres

NB. If you check a version out of the subversion repository it may use 
Data::Dumper for debugging. Packaged releases don't use it.

The easiest way to install modules is with the CPAN shell. You generally need 
to be root in order to do this. 

    perl -eshell -MCPAN
    
On Mac OS X you can use sudo to temporarily become root (enter your usual
admin password when prompted):

    sudo perl -eshell -MCPAN

Once the shell has started (you may be prompted to configure it):

    install DBI
    install CGI
    install HTML::Template

If using SQLite:

    install DBD::SQLite

If using Postgres:
    
    install DBD::Pg


4. Installing RackMonkey
========================
If you are upgrading from v1.2.1 or v1.2.2 don't follow this section, instead
scroll down to section 8. Upgrading RackMonkey.

Once you have obtained a copy of RackMonkey (see section 2) you should have a
directory with the following layout:

doc         Documentation for RackMonkey
README      Read this before you start
perl        Contains the perl scripts and modules
sql         SQL to create the RackMonkey database
t           Directory containing test scripts
tmpl        HTML::Template files for the web interface
www         Web space files, e.g. images, css files

Copy the rackmonkey.pl file and the whole RackMonkey directory from the perl
directory to a suitable location on your web server (e.g. /cgi-bin) and ensure
that rackmonkey.pl is executable by the web server user.

For example, to make rackmonkey.pl executable by all users run:

    chmod 755 rackmonkey.pl

The RackMonkey script uses /usr/bin/env to choose the perl revision to run. If
you want to specify a specific version of perl, or your env command lives in
another directory, you need to update the #! line at the top of rackmonkey.pl.

RackMonkey/Conf.pm will contain the username/password for your database,
this shouldn't reside in normal web space (/cgi-bin is usually OK though). For
maximum security you may want to put the RackMonkey directory outside the web 
root of your web server. You can then add a 'use lib' line to the top of
rackmonkey.pl. For example, if your directory is /home/rackmonkey/RackMonkey:

    use lib '/home/rackmonkey';

Copy the tmpl directory to somewhere that can be read by the web server, but
ideally not in web space, for example: /home/rackmonkey/tmpl

Copy the contents of the www directory to somewhere within web space where you
want to serve web content from, e.g. /rackmonkey within the web root. This
directory needs to be accessible from a web browser.


5. Configuring RackMonkey
=========================
Take a copy of the default RackMonkey configuration:

    cp RackMonkey/Conf.pm-default RackMonkey/Conf.pm 

Open RackMonkey/Conf.pm in your favourite editor. The following values must be
set for RackMonkey to work (other options can be ignored during installation).

For SQLite
----------
When using SQLite you need to choose a filesystem path for your database, for
example if you want your database to reside in /home/rack/rackmonkey.db, use:
    
use constant DBDCONNECT => 'dbi:SQLite:dbname=/home/rack/rackmonkey.db';

NB. This path must be writable by the web server and should not be within
web space, or users will be able to download your database. As we're using
SQLite you can leave the DBUSER and DBPASS values blank.

For Postgres
------------
If using Postgres you need to create a database for rackmonkey and grant 
suitable permissions to a user. If you're not familiar with Postgres, the
following pages should help:

http://www.postgresql.org/docs/8.0/interactive/sql-createuser.html
http://www.postgresql.org/docs/8.0/static/sql-createdatabase.html

For further information (and guides for later versions) see:
http://www.postgresql.org/docs/. 

Postgres databases are created in a location specified by the Postgres 
configuration, so you only need to provide a database name in Conf.pm, e.g.

use constant DBDCONNECT => 'dbi:Pg:dbname=rackmonkey';

You also need to specify the user and password you created, e.g.
        
use constant DBUSER => 'rackmonkey';
use constant DBPASS => '7jhH#98*';

For All Systems
---------------
TMPLPATH sets the filesystem path to your template files, it should be an
absolute path, something like:

use constant TMPLPATH => '/home/rackmonkey/tmpl';

WWWPATH sets the path within web space that your web content resides (that is
relative to the DOCUMENT_ROOT in Apache), for example:

use constant WWWPATH => '/rackmonkey';
    

6. Database Set Up
==================
Before you can run RackMonkey you need to set up the database. You must run
the schema and default_data SQL files against the database or else it won't
work. Once they have run you can optionally install the sample data.

For SQLite
----------
Make a note of the path you specified for DBDCONNECT, then run both of the
following to set up the database and install the default data (required):

    sqlite3 [PATH] < sql/schema.sqlite.sql
    sqlite3 [PATH] < sql/default_data.sql
	
You should then change the permissions of this file and its parent directory 
to be readable and writable by your web server. For example, you might change
the owner to 'www' if that is the user your web server runs under.

For Postgres
------------
For Postgres, run both of the following to set up the database and install the
default data (required).

    psql -U [USERNAME] [DBNAME] < sql/schema.postgres.sql
    psql -U [USERNAME] [DBNAME] < sql/default_data.sql
    
Where [USERNAME] is the name of the RackMonkey Postgres user and [DBNAME] is
the name of the database you created (see section 5).

Sample Data
-----------
If this is the first time you've installed RackMonkey you should install the
sample data. This contains common companies, operating systems, roles etc. to
help get you started quickly. NB. Don't perform this step until you've run the
schema and default_data files against the database (above). 

To install the sample data run the appropriate command for your database:

    sqlite3 [PATH] < sql/sample_data.sql

    or

    psql [DBNAME] < sql/sample_data.sql

    
7. Running RackMonkey
=====================
You can now start the app by pointing your browser at the location of the
rackmonkey.pl script. You should be presented with a screen showing an empty
table of racks. If everything works correctly you probably want to start
reading userguide.txt. If you're having trouble getting RackMonkey to run,
read the next section.


8. Upgrading RackMonkey
=======================
RackMonkey v1.2.x can be upgraded to the latest version following the
instructions below. NB. Upgrading from v1.1 is not supported.

8.1 Upgrading to v1.2.3 from v1.2.x
===================================
Upgrading from earlier releases of v1.2 is straightforward: there are no
database schema changes.

Despite the fact there are no schema changes in this release, you should take
a backup of the RackMonkey database before proceeding. For SQLite this can
be achieved by copying the database file, for Postgres use pg_dump.

To perform the actual upgrade, uncompress the new release in a temporary
location, then follow these steps (you may wish to take backups of any files
you delete):

* Upgrade Templates: delete all the existing templates and copy the new
  templates into the existing template directory.

* Upgrade web content: delete all the existing web (www) content and copy the 
  new content into the existing directory.

* Upgrade docs: overwrite the existing docs with the new versions.

* Upgrade code: copy the contents of the perl/RackMonkey directory into your 
  existing perl/RackMonkey directory (your existing conf will work fine and 
  won't be over-written). Now copy the new rackmonkey.pl script over the 
  existing one.

* Update your Config.pm to support Dell serial queries.
  - Copy the 'use constant DELLQUERY' line from Config.pm-default
  - Add DELLQUERY to the @EXPORT line, as in Config.pm-default.

* Update your database build value to match the new code by running the
  following SQL statement on the database:

  UPDATE rm_meta SET VALUE='1.2.3' WHERE name='system_build';
	
* If running RackMonkey under mod_perl you must restart or HUP your
  mod_perl instance. This ensures mod_perl reads the new modules.

The upgrade is now complete. No further reconfiguration is required, your
updated RackMonkey is ready to use. If you experience any problems with the
upgrade you should consult the Troubleshooting section (below).


8.3 Reverting to v1.2.1 or v1.2.2 from v1.2.3
=============================================
* Take a copy of RackMonkey/Conf.pm
* Download v1.2.1 or v1.2.2-1 from http://www.rackmonkey.org/download
* Do a fresh install of the older version following its instructions, but
  skipping configuration
* Copy your saved Conf.pm into the perl/RackMonkey directory.


9. Troubleshooting
==================
This section deals with system issues which prevent RackMonkey running or
using its database. For help with using RackMonkey see userguide.txt.

RackMonkey Won't Run
--------------------
If you get an 'Internal Server Error' or the web server displays the text of
rackmonkey.pl (rather than executing it), check your web server error log.

Common reasons for RackMonkey failing to run are:

* The #! line at the top of rackmonkey.pl can't find env in /usr/bin
  This is the usual cause of errors of the form: 
      [error] (2)No such file or directory: exec of rackmonkey.pl failed
  You can fix this by editing the #! line to point at env or directly at perl.

* Permissions incorrect set for rackmonkey.pl. Usually solved by running:
      chmod 755 rackmonkey.pl

* ExecCGI isn't turned on for the directory in which rackmonkey.pl resides or
  for files of type .pl (this problem applies to Apache web servers).
  Edit your Apache configuration to allow CGIs to be run. For more help on
  using Apache see: http://httpd.apache.org/docs/
        
* Missing modules
  This is usually indicated by an error of the form:
      Can't locate MODULE.pm in @INC ....
  Make sure you installed all the required modules (see section 3, above).
  If the error is for RackMonkey/Conf.pm ensure you've completed 
  configuration (see section 5, above).

* DOS line endings on files
  If you have DOS line endings on files it can break the #! line. Try
  downloading RackMonkey again, or use the dos2unix command.

* Perl version isn't at least 5.61
  If your perl version isn't new enough you will get an error of the form:
      Perl v5.6.1 required--this is only v5.004
  You can download a newer perl from: http://www.perl.com/download.csp 


Missing Graphics and Stylesheet
-------------------------------
If the RackMonkey script runs, but the graphics and stylesheet are missing,
you should check the WWWPATH setting in Conf.pm.

Missing Database
----------------
If you get an error of the form:

  DBI connect('dbname=/data/rack.db','',...) failed: unable to open
  database file(1) at dbdimp.c line 94 at /content/rackmonkey.pl line 45 

Check your config to ensure you have the right database path in DBDCONNECT.
    
Unable to Edit/Create Entries
-----------------------------
If RackMonkey is able to display entries without issue, but when you try to
create or edit an entry you get a message similar to the following:

    "...unable to open database file(1)..."
    "...attempt to write a readonly database(1)..." 

You should check the permission on the SQLite database file and the directory
in which it resides. The web servers needs to be able to write to the file and
the directory. This error can only occur when using SQLite, as other databases
engines don't make direct use of files in the same way.

Permission Denied for Relation <table>
--------------------------------------
If you're using Postgres and get an error of the form:

    "...permission denied for relation <table>..."

You haven't granted appropriate permissions to the role (a user in Postgres 
speak) you're using to connect to the database. Try running a command of the
form in psql:

    GRANT ALL ON <table>,<table>_id_seq to <role>;

Where <role> is the role you're using to connect from RackMonkey, and <table>
is the relation mentioned in the error message.


10. Logging Support Requests
============================
If you have issues running RackMonkey please check the troubleshooting section
of this document (above) and the RackMonkey FAQ:

    http://www.rackmonkey.org/faq

If you're still stuck, please log a support request at:

    http://www.rackmonkey.org/support

When logging a support request please include as much detail as possible:
operating system, database software and revision, and any error messages.


11. Bugs and Feature Requests
=============================
To review the current list of bugs and feature requests, or to submit
new ones, please visit:
    
     http://www.rackmonkey.org